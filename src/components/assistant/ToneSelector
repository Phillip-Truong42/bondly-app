
import React from "react";
import { motion } from "framer-motion";
import { Heart, Users, HelpCircle, Sparkles } from "lucide-react";
import { useI18n } from '../i18n/I18nProvider';

const tones = [
  {
    key: "empathetic",
    label: "Empathetic",
    icon: Heart,
    description: "Show understanding & warmth",
    color: "from-pink-400 to-rose-500"
  },
  {
    key: "supportive", 
    label: "Supportive",
    icon: Users,
    description: "Be a reliable teammate",
    color: "from-blue-400 to-sky-500"
  },
  {
    key: "clarifying",
    label: "Clarifying",
    icon: HelpCircle,
    description: "Ask for more details gently", 
    color: "from-green-400 to-teal-500"
  },
  {
    key: "playful",
    label: "Playful",
    icon: Sparkles,
    description: "Lighten the mood kindly",
    color: "from-amber-400 to-orange-500"
  }
];

export default function ToneSelector({ selectedTone, onToneChange }) {
  const { t } = useI18n();
  return (
    <div className="space-y-3">
      <h3 className="text-sm font-medium text-gray-700">{t('chooseVibe')}</h3>
      <div className="grid grid-cols-2 gap-3">
        {tones.map((tone) => {
          const Icon = tone.icon;
          const isSelected = selectedTone === tone.key;
          
          return (
            <motion.button
              key={tone.key}
              whileHover={{ scale: 1.02 }}
              whileTap={{ scale: 0.98 }}
              onClick={() => onToneChange(tone.key)}
              className={`p-4 rounded-xl border-2 transition-all ${
                isSelected
                  ? "border-orange-300 bg-orange-50"
                  : "border-gray-200 bg-white hover:border-orange-200"
              }`}
            >
              <div className="flex flex-col items-center gap-2">
                <div className={`w-10 h-10 rounded-full bg-gradient-to-r ${tone.color} flex items-center justify-center`}>
                  <Icon className="w-5 h-5 text-white" />
                </div>
                <div className="text-center">
                  <p className={`text-sm font-medium ${isSelected ? 'text-orange-700' : 'text-gray-900'}`}>
                    {tone.label}
                  </p>
                  <p className="text-xs text-gray-500">{tone.description}</p>
                </div>
              </div>
            </motion.button>
          );
        })}
      </div>
    </div>
  );
}
