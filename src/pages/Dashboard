import React, { useState, useEffect } from "react";
import { ConversationHelp, User } from "@/entities/all";
import { motion } from "framer-motion";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { TrendingUp, MessageCircle, Heart, Zap, Smile, Users, HelpCircle, Sparkles } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { useI18n } from '../components/i18n/I18nProvider';

export default function Dashboard() {
  const { t } = useI18n();
  const [conversations, setConversations] = useState([]);
  const [stats, setStats] = useState({
    totalConversations: 0,
    favoriteType: "empathetic",
    positiveInteractions: 92,
    weeklyGrowth: 15
  });

  useEffect(() => {
    const loadData = async () => {
      const conversationData = await ConversationHelp.list("-created_date", 10);
      setConversations(conversationData);

      const totalConvos = await ConversationHelp.count();
      const toneCount = conversationData.reduce((acc, conv) => {
        acc[conv.selected_tone] = (acc[conv.selected_tone] || 0) + 1;
        return acc;
      }, {});
      const favoriteType = Object.keys(toneCount).reduce((a, b) => 
        toneCount[a] > toneCount[b] ? a : b, "empathetic");

      setStats(prev => ({
        ...prev,
        totalConversations: totalConvos,
        favoriteType,
      }));
    };
    loadData();
  }, []);

  const toneColors = {
    empathetic: { bg: "bg-pink-100", text: "text-pink-700", icon: Heart },
    supportive: { bg: "bg-blue-100", text: "text-blue-700", icon: Users },
    clarifying: { bg: "bg-green-100", text: "text-green-700", icon: HelpCircle },
    playful: { bg: "bg-amber-100", text: "text-amber-700", icon: Sparkles }
  };

  return (
    <div className="py-6 space-y-6">
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center space-y-2"
      >
        <h1 className="text-2xl font-bold gradient-text">{t('dashboardTitle')}</h1>
        <p className="text-gray-600">{t('dashboardSubtitle')}</p>
      </motion.div>

      <div className="grid grid-cols-2 gap-4">
        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 0.1 }}
        >
          <Card className="glass-card border-orange-200">
            <CardHeader className="pb-2">
              <CardTitle className="text-sm text-gray-600">{t('totalHelps')}</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex items-center gap-2">
                <span className="text-2xl font-bold gradient-text">
                  {stats.totalConversations}
                </span>
                <Badge className="bg-green-100 text-green-700">
                  <TrendingUp className="w-3 h-3 mr-1" />
                  +{stats.weeklyGrowth}%
                </Badge>
              </div>
            </CardContent>
          </Card>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 0.2 }}
        >
          <Card className="glass-card border-orange-200">
            <CardHeader className="pb-2">
              <CardTitle className="text-sm text-gray-600">{t('positiveInteractions')}</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex items-center gap-2">
                <span className="text-2xl font-bold gradient-text">
                  {stats.positiveInteractions}%
                </span>
                <Heart className="w-5 h-5 text-red-400" fill="currentColor" />
              </div>
            </CardContent>
          </Card>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, scale: 0.95 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ delay: 0.4 }}
        >
          <Card className="glass-card border-orange-200">
            <CardHeader className="pb-2">
              <CardTitle className="text-sm text-gray-600">{t('favoriteTone')}</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="flex items-center gap-2">
                <Badge className={`${toneColors[stats.favoriteType]?.bg} ${toneColors[stats.favoriteType]?.text} capitalize`}>
                  {stats.favoriteType}
                </Badge>
              </div>
            </CardContent>
          </Card>
        </motion.div>
      </div>

      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.6 }}
      >
        <Card className="glass-card border-orange-200">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <MessageCircle className="w-5 h-5" />
              {t('recentConversations')}
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            {conversations.length === 0 ? (
              <div className="text-center py-8 text-gray-500">
                <MessageCircle className="w-12 h-12 mx-auto mb-3 text-gray-300" />
                <p>{t('noConversations')}</p>
                <p className="text-sm">{t('noConversationsDesc')}</p>
              </div>
            ) : (
              conversations.map((conv) => {
                const toneStyle = toneColors[conv.selected_tone] || toneColors.empathetic;
                const ToneIcon = toneStyle.icon;
                
                return (
                  <div key={conv.id} className="p-3 bg-gray-50 rounded-lg space-y-2">
                    <div className="flex items-center justify-between">
                      <Badge className={`${toneStyle.bg} ${toneStyle.text} capitalize`}>
                        <ToneIcon className="w-3 h-3 mr-1" />
                        {conv.selected_tone}
                      </Badge>
                      <span className="text-xs text-gray-500">
                        {new Date(conv.created_date).toLocaleDateString()}
                      </span>
                    </div>
                    <p className="text-sm text-gray-600 line-clamp-2">
                      "{conv.original_message}"
                    </p>
                  </div>
                );
              })
            )}
          </CardContent>
        </Card>
      </motion.div>
    </div>
  );
}